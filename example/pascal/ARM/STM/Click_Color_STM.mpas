{*
Example for Color Click

    Date          : apr 2018.
    Author        : Katarina Perendic

Test configuration STM32 :
    
    MCU              : STM32F107VCT6
    Dev. Board       : EasyMx PRO v7 for STM32
    ARM Compiler ver : v6.0.0.0

---

Description :

The application is composed of three sections :

- System Initialization - Initializes I2C module
- Application Initialization - Initializes driver init and configuration chip for measurement
- Application Task - (code snippet) - Read color and check which color is detected by the sensor
                                      If the color is detected, the detected color message is logged on the USBUART.

*}
program Click_Color_STM;

uses Click_Color_types, Click_Color_config;

var
    isColor : uint8_t; 
    colorValue : real; 
    dataText : array[20] of char; 
    
procedure systemInit(); 
begin

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT); 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_OUTPUT); 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT); 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_OUTPUT); 
    mikrobus_i2cInit(_MIKROBUS1, @_COLOR_I2C_CFG[0]); 
    mikrobus_logInit(_LOG_USBUART_A, 9600); 
    mikrobus_logWrite('--- System Init --- ', _LOG_LINE); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    color_i2cDriverInit(T_COLOR_P(@_MIKROBUS1_GPIO), T_COLOR_P(@_MIKROBUS1_I2C), 0x29); 
    mikrobus_logWrite('--- Color Init --- ', _LOG_LINE); 
    color_writeByte(_COLOR_REG_ENABLE, (((_COLOR_ENABLE_RGBC_INTERRUPT or _COLOR_ENABLE_WAIT) or _COLOR_ENABLE_RGBC) or _COLOR_POWER_ON)); 
    color_writeByte(_COLOR_REG_CONTROL, _COLOR_CTRL_GAIN_x16); 
    color_writeByte(_COLOR_REG_RGBC_TIME, _COLOR_RGBC_TIME_700ms); 
    color_setLED(_COLOR_LED_RED_ENABLE, _COLOR_LED_GREEN_ENABLE, _COLOR_LED_BLUE_ENABLE); 
    mikrobus_logWrite('--- Start measurement --- ', _LOG_LINE); 

end;

procedure applicationTask(); 
begin

    colorValue := color_getColorValue(); 
    isColor := color_getColor(colorValue); 
    case isColor of
        1 :
        begin
            mikrobus_logWrite('--- Color: ORANGE ', _LOG_LINE); 
        end;
        2 :
        begin
            mikrobus_logWrite('--- Color: RED ', _LOG_LINE); 
        end;
        3 :
        begin
            mikrobus_logWrite('--- Color: PINK ', _LOG_LINE); 
        end;
        4 :
        begin
            mikrobus_logWrite('--- Color: PURPLE ', _LOG_LINE); 
        end;
        5 :
        begin
            mikrobus_logWrite('--- Color: BLUE ', _LOG_LINE); 
        end;
        6 :
        begin
            mikrobus_logWrite('--- Color: CYAN ', _LOG_LINE); 
        end;
        7 :
        begin
            mikrobus_logWrite('--- Color: GREEN ', _LOG_LINE); 
        end;
        8 :
        begin
            mikrobus_logWrite('--- Color: YELLOW ', _LOG_LINE); 
        end
        else
        begin
        end;
    end;
    Delay_100ms(); 

end;

begin
    isColor := 0;

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.